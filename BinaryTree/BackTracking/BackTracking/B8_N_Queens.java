package BackTracking;

import java.util.*;

public class B8_N_Queens
{
    // Main function to solve N-Queens problem
    public List<List<String>> solveNQueens(int n) 
    {
        List<List<String>> output = new ArrayList<>();  // Stores all valid solutions
        char[][] nQueens = new char[n][n];  // Initialize empty board
        
        
        for (int i = 0; i < n; i++) // Fill the board with dots
        {
            Arrays.fill(nQueens[i], '.');
        }
        
        solveNQueens(n, output, nQueens, 0); // Start solving from row 0
        return output;
    }

    // Recursive helper function to solve N-Queens problem
    private void solveNQueens(int n, List<List<String>> output, char[][] nQueens, int row) 
    {
        // Base case: if we've placed queens in all rows, we found a valid solution
        if (row == n) 
        {
            List<String> solution = new ArrayList<>();
            for (char[] rowArray : nQueens) 
            {
                solution.add(new String(rowArray));
            }
            output.add(solution);
            return;
        }

        // Try placing queen in each column of current row
        for (int col = 0; col < n; col++) 
        {
            
            if (isSafePlace(n, nQueens, row, col)) // If current position is safe
            {
                
                nQueens[row][col] = 'Q'; // Place queen
                
                solveNQueens(n, output, nQueens, row + 1); // Recursively solve for next row
                
                nQueens[row][col] = '.'; // Backtrack: remove queen for trying next position
            }
        }
    }

    // Helper function to check if placing a queen at position (row,col) is safe
    private boolean isSafePlace(int n, char[][] nQueens, int row, int col) 
    {
        // Check column
        for (int i = 0; i < n; i++) 
        {
            if (nQueens[i][col] == 'Q') 
            {
                return false;
            }
        }

        // Check upper-left diagonal
        for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) 
        {
            if (nQueens[i][j] == 'Q') 
            {
                return false;
            }
        }

        // Check upper-right diagonal
        for (int i = row - 1, j = col + 1; i >= 0 && j < n; i--, j++) 
        {
            if (nQueens[i][j] == 'Q') 
            {
                return false;
            }
        }

        // If no conflicts found, position is safe
        return true;
    }

    // Main method with Scanner input
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of Queens (n): ");
        int n = sc.nextInt();
        sc.close();

        B8_N_Queens obj = new B8_N_Queens();
        List<List<String>> result = obj.solveNQueens(n);

        System.out.println("\nTotal Solutions: " + result.size());
        for (List<String> board : result) 
        {
            for (String row : board) 
            {
                System.out.println(row);
            }
            System.out.println();
        }
    }
}
// Enter the number of Queens (n): 1

// Total Solutions: 1
// Q

// Enter the number of Queens (n): 2

// Total Solutions: 0

// Enter the number of Queens (n): 4

// Total Solutions: 2
// .Q..
// ...Q
// Q...
// ..Q.

// ..Q.
// Q...
// ...Q
// .Q..

// Enter the number of Queens (n): 8

// Total Solutions: 92
// Q.......
// ....Q...
// .......Q
// .....Q..
// ..Q.....
// ......Q.
// .Q......
// ...Q....

// Q.......
// .....Q..
// .......Q
// ..Q.....
// ......Q.
// ...Q....
// .Q......
// ....Q...

// Q.......
// ......Q.
// ...Q....
// .....Q..
// .......Q
// .Q......
// ....Q...
// ..Q.....

// Q.......
// ......Q.
// ....Q...
// .......Q
// .Q......
// ...Q....
// .....Q..
// ..Q.....

// .Q......
// ...Q....
// .....Q..
// .......Q
// ..Q.....
// Q.......
// ......Q.
// ....Q...

// .Q......
// ....Q...
// ......Q.
// Q.......
// ..Q.....
// .......Q
// .....Q..
// ...Q....

// .Q......
// ....Q...
// ......Q.
// ...Q....
// Q.......
// .......Q
// .....Q..
// ..Q.....

// .Q......
// .....Q..
// Q.......
// ......Q.
// ...Q....
// .......Q
// ..Q.....
// ....Q...

// .Q......
// .....Q..
// .......Q
// ..Q.....
// Q.......
// ...Q....
// ......Q.
// ....Q...

// .Q......
// ......Q.
// ..Q.....
// .....Q..
// .......Q
// ....Q...
// Q.......
// ...Q....

// .Q......
// ......Q.
// ....Q...
// .......Q
// Q.......
// ...Q....
// .....Q..
// ..Q.....

// .Q......
// .......Q
// .....Q..
// Q.......
// ..Q.....
// ....Q...
// ......Q.
// ...Q....

// ..Q.....
// Q.......
// ......Q.
// ....Q...
// .......Q
// .Q......
// ...Q....
// .....Q..

// ..Q.....
// ....Q...
// .Q......
// .......Q
// Q.......
// ......Q.
// ...Q....
// .....Q..

// ..Q.....
// ....Q...
// .Q......
// .......Q
// .....Q..
// ...Q....
// ......Q.
// Q.......

// ..Q.....
// ....Q...
// ......Q.
// Q.......
// ...Q....
// .Q......
// .......Q
// .....Q..

// ..Q.....
// ....Q...
// .......Q
// ...Q....
// Q.......
// ......Q.
// .Q......
// .....Q..

// ..Q.....
// .....Q..
// .Q......
// ....Q...
// .......Q
// Q.......
// ......Q.
// ...Q....

// ..Q.....
// .....Q..
// .Q......
// ......Q.
// Q.......
// ...Q....
// .......Q
// ....Q...

// ..Q.....
// .....Q..
// .Q......
// ......Q.
// ....Q...
// Q.......
// .......Q
// ...Q....

// ..Q.....
// .....Q..
// ...Q....
// Q.......
// .......Q
// ....Q...
// ......Q.
// .Q......

// ..Q.....
// .....Q..
// ...Q....
// .Q......
// .......Q
// ....Q...
// ......Q.
// Q.......

// ..Q.....
// .....Q..
// .......Q
// Q.......
// ...Q....
// ......Q.
// ....Q...
// .Q......

// ..Q.....
// .....Q..
// .......Q
// Q.......
// ....Q...
// ......Q.
// .Q......
// ...Q....

// ..Q.....
// .....Q..
// .......Q
// .Q......
// ...Q....
// Q.......
// ......Q.
// ....Q...

// ..Q.....
// ......Q.
// .Q......
// .......Q
// ....Q...
// Q.......
// ...Q....
// .....Q..

// ..Q.....
// ......Q.
// .Q......
// .......Q
// .....Q..
// ...Q....
// Q.......
// ....Q...

// ..Q.....
// .......Q
// ...Q....
// ......Q.
// Q.......
// .....Q..
// .Q......
// ....Q...

// ...Q....
// Q.......
// ....Q...
// .......Q
// .Q......
// ......Q.
// ..Q.....
// .....Q..

// ...Q....
// Q.......
// ....Q...
// .......Q
// .....Q..
// ..Q.....
// ......Q.
// .Q......

// ...Q....
// .Q......
// ....Q...
// .......Q
// .....Q..
// Q.......
// ..Q.....
// ......Q.

// ...Q....
// .Q......
// ......Q.
// ..Q.....
// .....Q..
// .......Q
// Q.......
// ....Q...

// ...Q....
// .Q......
// ......Q.
// ..Q.....
// .....Q..
// .......Q
// ....Q...
// Q.......

// ...Q....
// .Q......
// ......Q.
// ....Q...
// Q.......
// .......Q
// .....Q..
// ..Q.....

// ...Q....
// .Q......
// .......Q
// ....Q...
// ......Q.
// Q.......
// ..Q.....
// .....Q..

// ...Q....
// .Q......
// .......Q
// .....Q..
// Q.......
// ..Q.....
// ....Q...
// ......Q.

// ...Q....
// .....Q..
// Q.......
// ....Q...
// .Q......
// .......Q
// ..Q.....
// ......Q.

// ...Q....
// .....Q..
// .......Q
// .Q......
// ......Q.
// Q.......
// ..Q.....
// ....Q...

// ...Q....
// .....Q..
// .......Q
// ..Q.....
// Q.......
// ......Q.
// ....Q...
// .Q......

// ...Q....
// ......Q.
// Q.......
// .......Q
// ....Q...
// .Q......
// .....Q..
// ..Q.....

// ...Q....
// ......Q.
// ..Q.....
// .......Q
// .Q......
// ....Q...
// Q.......
// .....Q..

// ...Q....
// ......Q.
// ....Q...
// .Q......
// .....Q..
// Q.......
// ..Q.....
// .......Q

// ...Q....
// ......Q.
// ....Q...
// ..Q.....
// Q.......
// .....Q..
// .......Q
// .Q......

// ...Q....
// .......Q
// Q.......
// ..Q.....
// .....Q..
// .Q......
// ......Q.
// ....Q...

// ...Q....
// .......Q
// Q.......
// ....Q...
// ......Q.
// .Q......
// .....Q..
// ..Q.....

// ...Q....
// .......Q
// ....Q...
// ..Q.....
// Q.......
// ......Q.
// .Q......
// .....Q..

// ....Q...
// Q.......
// ...Q....
// .....Q..
// .......Q
// .Q......
// ......Q.
// ..Q.....

// ....Q...
// Q.......
// .......Q
// ...Q....
// .Q......
// ......Q.
// ..Q.....
// .....Q..

// ....Q...
// Q.......
// .......Q
// .....Q..
// ..Q.....
// ......Q.
// .Q......
// ...Q....

// ....Q...
// .Q......
// ...Q....
// .....Q..
// .......Q
// ..Q.....
// Q.......
// ......Q.

// ....Q...
// .Q......
// ...Q....
// ......Q.
// ..Q.....
// .......Q
// .....Q..
// Q.......

// ....Q...
// .Q......
// .....Q..
// Q.......
// ......Q.
// ...Q....
// .......Q
// ..Q.....

// ....Q...
// .Q......
// .......Q
// Q.......
// ...Q....
// ......Q.
// ..Q.....
// .....Q..

// ....Q...
// ..Q.....
// Q.......
// .....Q..
// .......Q
// .Q......
// ...Q....
// ......Q.

// ....Q...
// ..Q.....
// Q.......
// ......Q.
// .Q......
// .......Q
// .....Q..
// ...Q....

// ....Q...
// ..Q.....
// .......Q
// ...Q....
// ......Q.
// Q.......
// .....Q..
// .Q......

// ....Q...
// ......Q.
// Q.......
// ..Q.....
// .......Q
// .....Q..
// ...Q....
// .Q......

// ....Q...
// ......Q.
// Q.......
// ...Q....
// .Q......
// .......Q
// .....Q..
// ..Q.....

// ....Q...
// ......Q.
// .Q......
// ...Q....
// .......Q
// Q.......
// ..Q.....
// .....Q..

// ....Q...
// ......Q.
// .Q......
// .....Q..
// ..Q.....
// Q.......
// ...Q....
// .......Q

// ....Q...
// ......Q.
// .Q......
// .....Q..
// ..Q.....
// Q.......
// .......Q
// ...Q....

// ....Q...
// ......Q.
// ...Q....
// Q.......
// ..Q.....
// .......Q
// .....Q..
// .Q......

// ....Q...
// .......Q
// ...Q....
// Q.......
// ..Q.....
// .....Q..
// .Q......
// ......Q.

// ....Q...
// .......Q
// ...Q....
// Q.......
// ......Q.
// .Q......
// .....Q..
// ..Q.....

// .....Q..
// Q.......
// ....Q...
// .Q......
// .......Q
// ..Q.....
// ......Q.
// ...Q....

// .....Q..
// .Q......
// ......Q.
// Q.......
// ..Q.....
// ....Q...
// .......Q
// ...Q....

// .....Q..
// .Q......
// ......Q.
// Q.......
// ...Q....
// .......Q
// ....Q...
// ..Q.....

// .....Q..
// ..Q.....
// Q.......
// ......Q.
// ....Q...
// .......Q
// .Q......
// ...Q....

// .....Q..
// ..Q.....
// Q.......
// .......Q
// ...Q....
// .Q......
// ......Q.
// ....Q...

// .....Q..
// ..Q.....
// Q.......
// .......Q
// ....Q...
// .Q......
// ...Q....
// ......Q.

// .....Q..
// ..Q.....
// ....Q...
// ......Q.
// Q.......
// ...Q....
// .Q......
// .......Q

// .....Q..
// ..Q.....
// ....Q...
// .......Q
// Q.......
// ...Q....
// .Q......
// ......Q.

// .....Q..
// ..Q.....
// ......Q.
// .Q......
// ...Q....
// .......Q
// Q.......
// ....Q...

// .....Q..
// ..Q.....
// ......Q.
// .Q......
// .......Q
// ....Q...
// Q.......
// ...Q....

// .....Q..
// ..Q.....
// ......Q.
// ...Q....
// Q.......
// .......Q
// .Q......
// ....Q...

// .....Q..
// ...Q....
// Q.......
// ....Q...
// .......Q
// .Q......
// ......Q.
// ..Q.....

// .....Q..
// ...Q....
// .Q......
// .......Q
// ....Q...
// ......Q.
// Q.......
// ..Q.....

// .....Q..
// ...Q....
// ......Q.
// Q.......
// ..Q.....
// ....Q...
// .Q......
// .......Q

// .....Q..
// ...Q....
// ......Q.
// Q.......
// .......Q
// .Q......
// ....Q...
// ..Q.....

// .....Q..
// .......Q
// .Q......
// ...Q....
// Q.......
// ......Q.
// ....Q...
// ..Q.....

// ......Q.
// Q.......
// ..Q.....
// .......Q
// .....Q..
// ...Q....
// .Q......
// ....Q...

// ......Q.
// .Q......
// ...Q....
// Q.......
// .......Q
// ....Q...
// ..Q.....
// .....Q..

// ......Q.
// .Q......
// .....Q..
// ..Q.....
// Q.......
// ...Q....
// .......Q
// ....Q...

// ......Q.
// ..Q.....
// Q.......
// .....Q..
// .......Q
// ....Q...
// .Q......
// ...Q....

// ......Q.
// ..Q.....
// .......Q
// .Q......
// ....Q...
// Q.......
// .....Q..
// ...Q....

// ......Q.
// ...Q....
// .Q......
// ....Q...
// .......Q
// Q.......
// ..Q.....
// .....Q..

// ......Q.
// ...Q....
// .Q......
// .......Q
// .....Q..
// Q.......
// ..Q.....
// ....Q...

// ......Q.
// ....Q...
// ..Q.....
// Q.......
// .....Q..
// .......Q
// .Q......
// ...Q....

// .......Q
// .Q......
// ...Q....
// Q.......
// ......Q.
// ....Q...
// ..Q.....
// .....Q..

// .......Q
// .Q......
// ....Q...
// ..Q.....
// Q.......
// ......Q.
// ...Q....
// .....Q..

// .......Q
// ..Q.....
// Q.......
// .....Q..
// .Q......
// ....Q...
// ......Q.
// ...Q....

// .......Q
// ...Q....
// Q.......
// ..Q.....
// .....Q..
// .Q......
// ......Q.
// ....Q...

//51